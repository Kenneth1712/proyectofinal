package com.example.demo.controlador;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.example.demo.modelo.empleado;
import com.example.demo.modelo.nomina;
import com.example.demo.repositorio.empleado_repositorio;
import com.example.demo.repositorio.nomina_repositorio;

@RestController
@RequestMapping("/ver/nomi")

public class NominaControlador {

	@Autowired
	private nomina_repositorio repositorio;
	
	@Autowired
	private empleado_repositorio repositorio2;
	
	@GetMapping ("/nomina")
	public List<nomina> verNominas(){
		return repositorio.findAll();
	}
	
	@GetMapping ("/guardar")
	public List<nomina> guardaNom(){
		empleado em = this.repositorio2.findById((long)25221054).orElse(null);
		nomina no = new nomina ((float)1000000, (float) 50000, (float) 100000, (float) 1553560, "20/12/2012", em );
		this.repositorio.save(no);
		return this.repositorio.findAll();
	}
	
	
	
	@GetMapping ("/eliminar")
	public List<nomina> eliminarNom(){
		this.repositorio.deleteById((long)2);
		return this.repositorio.findAll();
		}

	  @GetMapping("/buscarporDeducidos")
	    public List <nomina> buscarPordeducidos(){
		  
	        return repositorio.findByDeducidos(5000);
	    }

	    @GetMapping("/buscarporFecha")
	    public List <nomina> buscarPorfecha(){
		  
	        return repositorio.findByFecha("20/12/2012");
	    }

	    @GetMapping("/buscaringresos")
	    public List <nomina> buscarPoringresos(){
		  
	        return repositorio.findByingresos(5000);
	    }
	    @GetMapping("/buscarsalario")
	    public List <nomina> buscarPorsalario(){
		  
	        return repositorio.findBySalario(5000);
	    }
	    
	    @GetMapping("/buscartotalsalario")
	    public List <nomina> buscarTotalsalario(){
		  
	        return repositorio.findByTotalsalario(1553560);
	    }
	    
	    @GetMapping("/buscaridentificacion")
	    public List <nomina> buscarIdentificacion(){
		  
	        return repositorio.findById(25221054);
	    }
	    @GetMapping("/guardarrr")
	    public Optional<empleado>guardarEmpleado(
	    
	   @RequestParam long id,
	    @RequestParam String nombre,
	    @RequestParam String apellido,
	    @RequestParam String correo,
	    @RequestParam String fechae)
	     throws ParseException {
	    	SimpleDateFormat sdf=new SimpleDateFormat("mm/dd/yy");
	    	Date fecha=sdf.parse(fechae);
	    	empleado e = new empleado(id,nombre,apellido,correo,fecha);
	    	this.repemp.save(e);
	    	return this.repemp.findById(id);
	    }
	    
	
	
	
	
	
	
	
	
	
}
	
	
	
	
	
	
	
	
	
	
	
	
	
